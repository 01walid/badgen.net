{"live":[{"id":"github","title":"GitHub","examples":{"/github/release/babel/babel":"latest release","/github/release/babel/babel/stable":"latest stable release","/github/tag/micromatch/micromatch":"latest tag","/github/watchers/micromatch/micromatch":"watchers","/github/status/micromatch/micromatch":"combined ci status","/github/status/micromatch/micromatch/gh-pages":"combined ci status (branch ref)","/github/status/micromatch/micromatch/f4809eb6df80b":"combined ci status (commit ref)","/github/status/micromatch/micromatch/4.0.1":"combined ci status (version ref)","/github/status/zeit/hyper/efeedd0a9d3":"combined ci status (commit ref)","/github/status/zeit/hyper/efeedd0a9d3/ci/circleci":"combined ci job status","/github/status/zeit/hyper/efeedd0a9d3/ci/circleci:%20build":"single ci job status","/github/status/babel/babel/bdbe8db5660/codecov":"combined ci job status","/github/status/zeit/now-cli/master/ci/circleci:%20test-unit":"single ci job status","/github/status/facebook/react/master/ci/circleci:%20lint":"single ci job status","/github/status/facebook/react/master/coverage/coveralls":"single ci job status","/github/stars/micromatch/micromatch":"stars","/github/forks/micromatch/micromatch":"forks","/github/issues/micromatch/micromatch":"issues","/github/open-issues/micromatch/micromatch":"open issues","/github/closed-issues/micromatch/micromatch":"closed issues","/github/label-issues/nodejs/node/ES%20Modules":"issues by label","/github/label-issues/atom/atom/help-wanted/open":"open issues by label","/github/label-issues/rust-lang/rust/B-RFC-approved/closed":"closed issues by label","/github/prs/micromatch/micromatch":"PRs","/github/open-prs/micromatch/micromatch":"open PRs","/github/closed-prs/micromatch/micromatch":"closed PRs","/github/merged-prs/micromatch/micromatch":"merged PRs","/github/commits/micromatch/micromatch":"commits count","/github/commits/micromatch/micromatch/gh-pages":"commits count (branch ref)","/github/commits/micromatch/micromatch/4.0.1":"commits count (tag ref)","/github/last-commit/micromatch/micromatch":"last commit","/github/last-commit/micromatch/micromatch/gh-pages":"last commit (branch ref)","/github/last-commit/micromatch/micromatch/4.0.1":"last commit (tag ref)","/github/branches/micromatch/micromatch":"branches","/github/releases/micromatch/micromatch":"releases","/github/tags/micromatch/micromatch":"tags","/github/license/micromatch/micromatch":"license","/github/contributors/micromatch/micromatch":"contributers","/github/assets-dl/electron/electron":"latest assets downloads","/github/dependents-repo/micromatch/micromatch":"repository depentents","/github/dependents-pkg/micromatch/micromatch":"package dependents"},"routes":["/github/:topic<watchers|stars|forks|branches|releases|tags|tag|license>/:owner/:repo","/github/:topic<prs|open-prs|closed-prs|merged-prs>/:owner/:repo","/github/:topic<issues|open-issues|closed-issues>/:owner/:repo","/github/:topic<label-issues>/:owner/:repo/:label/:states?<open|closed>","/github/:topic<commits|last-commit>/:owner/:repo/:ref?","/github/:topic<dt|assets-dl>/:owner/:repo/:scope?","/github/release/:owner/:repo/:channel?","/github/status/:owner/:repo/:ref/:context+","/github/status/:owner/:repo/:ref?","/github/contributors/:owner/:repo","/github/dependents-repo/:owner/:repo","/github/dependents-pkg/:owner/:repo"]},{"id":"npm","title":"npm","examples":{"/npm/v/express":"version","/npm/v/ava":"version","/npm/v/ava/next":"version (tag)","/npm/v/react/next":"version (tag)","/npm/v/@babel/core":"version (scoped package)","/npm/v/@nestjs/core/beta":"version (scoped & tag)","/npm/dw/express":"weekly downloads","/npm/dm/express":"monthly downloads","/npm/dy/express":"yearly downloads","/npm/dt/express":"total downloads","/npm/license/lodash":"license","/npm/node/next":"node version","/npm/dependents/got":"dependents"},"routes":["/npm/:topic/:scope<@.+>/:pkg/:tag?","/npm/:topic/:pkg/:tag?"]},{"id":"david","title":"David DM","examples":{"/david/dep/zeit/pkg":"dependencies","/david/dev/zeit/pkg":"dev dependencies","/david/peer/epoberezkin/ajv-keywords":"peer dependencies","/david/optional/epoberezkin/ajv-keywords":"optional dependencies","/david/dep/babel/babel/packages/babel-cli":"dependencies (sub path)"},"routes":["/david/:topic/:user/:repo/:path*"]},{"id":"packagephobia","title":"Packagephobia","examples":{"/packagephobia/install/webpack":"install size","/packagephobia/publish/webpack":"publish size","/packagephobia/publish/@tusbar/cache-control":"(scoped pkg) publish size"},"routes":["/packagephobia/:topic/:scope<@.*>/:name","/packagephobia/:topic/:name"]},{"id":"bundlephobia","title":"Bundlephobia","examples":{"/bundlephobia/min/react":"minified","/bundlephobia/minzip/react":"minified + gzip","/bundlephobia/minzip/@material-ui/core":"(scoped pkg) minified + gzip"},"routes":["/bundlephobia/:topic/:scope<@.*>/:name","/bundlephobia/:topic/:name"]},{"id":"crates","title":"Rust Crates","examples":{"/crates/v/regex":"version","/crates/d/regex":"downloads","/crates/dl/regex":"downloads (latest version)"},"routes":["/crates/:topic<v|d|dl>/:pkg"]},{"id":"docker","title":"Docker","examples":{"/docker/pulls/library/ubuntu":"pulls (library)","/docker/stars/library/ubuntu":"stars (library)","/docker/pulls/amio/node-chrome":"pulls (scoped)","/docker/stars/library/mongo?icon=docker&label=stars":"stars (icon & label)"},"routes":["/docker/:topic<stars|pulls>/:scope/:name"]},{"id":"homebrew","title":"Homebrew","examples":{"/homebrew/v/fish":"version","/homebrew/v/cake":"version"},"routes":["/homebrew/v/:pkg"]},{"id":"chrome-web-store","title":"Chrome Extensions","examples":{"/chrome-web-store/v/ckkdlimhmcjmikdlpkmbgfkaikojcbjk":"version","/chrome-web-store/users/ckkdlimhmcjmikdlpkmbgfkaikojcbjk":"users","/chrome-web-store/price/ckkdlimhmcjmikdlpkmbgfkaikojcbjk":"price","/chrome-web-store/stars/ckkdlimhmcjmikdlpkmbgfkaikojcbjk":"stars","/chrome-web-store/rating/ckkdlimhmcjmikdlpkmbgfkaikojcbjk":"rating","/chrome-web-store/rating-count/ckkdlimhmcjmikdlpkmbgfkaikojcbjk":"rating count"},"routes":["/chrome-web-store/:topic<v|users|price|stars|rating|rating-count>/:id"]},{"id":"amo","title":"Mozilla Add-on","examples":{"/amo/v/markdown-viewer-chrome":"version","/amo/users/markdown-viewer-chrome":"users","/amo/rating/markdown-viewer-chrome":"rating","/amo/stars/markdown-viewer-chrome":"stars","/amo/reviews/markdown-viewer-chrome":"reviews"},"routes":["/amo/:topic/:name"]},{"id":"pypi","title":"Pypi","examples":{"/pypi/v/pip":"version","/pypi/v/docutils":"version","/pypi/license/pip":"license"},"routes":["/pypi/:topic<v|license>/:project"]},{"id":"nuget","title":"Nuget","examples":{"/nuget/v/newtonsoft.json":"version (stable channel)","/nuget/v/newtonsoft.json/pre":"version (pre channel)","/nuget/v/newtonsoft.json/latest":"version (latest channel)"},"routes":["/nuget/v/:project/:channel?"]},{"id":"packagist","title":"Packagist","examples":{"/packagist/v/monolog/monolog":"version","/packagist/v/monolog/monolog/pre":"version (pre)","/packagist/v/monolog/monolog/latest":"version (latest)","/packagist/dt/monolog/monolog":"total downloads","/packagist/dd/monolog/monolog":"daily downloads","/packagist/dm/monolog/monolog":"monthly downloads","/packagist/favers/monolog/monolog":"favers","/packagist/dependents/monolog/monolog":"dependents","/packagist/suggesters/monolog/monolog":"suggesters","/packagist/name/monolog/monolog":"name","/packagist/ghs/monolog/monolog":"github stars","/packagist/ghw/monolog/monolog":"github watchers","/packagist/ghf/monolog/monolog":"github followers","/packagist/ghi/monolog/monolog":"github issues","/packagist/lang/monolog/monolog":"language","/packagist/license/monolog/monolog":"license"},"routes":["/packagist/:topic<v>/:vendor/:pkg/:channel?","/packagist/:topic<dt|dd|dm|favers|dependents|suggesters|n|name>/:vendor/:pkg","/packagist/:topic<ghs|ghw|ghf|ghi|lang|license>/:vendor/:pkg"]},{"id":"rubygems","title":"Ruby Gems","examples":{"/rubygems/v/rails":"version (stable)","/rubygems/v/rails/pre":"version (pre)","/rubygems/v/rails/latest":"version (latest)","/rubygems/dt/rails":"total downloads","/rubygems/dv/rails":"latest version downloads","/rubygems/n/rails":"name","/rubygems/p/rails":"platform"},"routes":["/rubygems/v/:gem/:channel?","/rubygems/:topic<dt|dv|n|p>/:gem"]},{"id":"apm","title":"Atom Package","examples":{"/apm/v/linter":"version","/apm/stars/linter":"stars","/apm/license/linter":"license","/apm/downloads/linter":"downloads"},"routes":["/apm/:topic/:pkg"]},{"id":"hackage","title":"Hackage","examples":{"/hackage/v/abt":"version","/hackage/v/Cabal":"version","/hackage/license/Cabal":"license"},"routes":["/hackage/:topic<v|license>/:pkg"]},{"id":"vs-marketplace","title":"Visual Studio Marketplace","examples":{"/vs-marketplace/v/vscodevim.vim":"version","/vs-marketplace/i/vscodevim.vim":"installs","/vs-marketplace/d/vscodevim.vim":"downloads","/vs-marketplace/rating/vscodevim.vim":"rating"},"routes":["/vs-marketplace/:topic<v|i|d|rating>/:pkg"]},{"id":"travis","title":"Travis CI","examples":{"/travis/babel/babel":"build","/travis/babel/babel/6.x":"build (branch)"},"routes":["/travis/:user/:repo/:branch?"]},{"id":"circleci","title":"CircleCI","examples":{"/circleci/github/nuxt/nuxt.js":"build","/circleci/github/nuxt/nuxt.js/master":"build (branch)"},"routes":["/circleci/:vcs<github|gitlab>/:user/:project/:branch?"]},{"id":"appveyor","title":"AppVeyor","examples":{"/appveyor/ci/gruntjs/grunt":"build","/appveyor/ci/gruntjs/grunt/deprecate":"build (branch)"},"routes":["/appveyor/ci/:account/:project/:branch?"]},{"id":"codecov","title":"CodeCov","examples":{"/codecov/c/github/babel/babel":"coverage (github)","/codecov/c/github/babel/babel/6.x":"coverage (github, branch)","/codecov/c/bitbucket/ignitionrobotics/ign-math":"coverage (bitbucket)","/codecov/c/bitbucket/ignitionrobotics/ign-math/master":"coverage (bitbucket, branch)","/codecov/c/gitlab/gitlab-org/gitaly":"coverage (gitlab)","/codecov/c/gitlab/gitlab-org/gitaly/master":"coverage (gitlab, branch)"},"routes":["/codecov/c/:vcs<gh|github|bitbucket|gitlab>/:owner/:repo/:branch?"]},{"id":"codacy","title":"Codacy","examples":{"/codacy/coverage/f0875490cea1497a9eca9c25f3f7774e":"coverage","/codacy/coverage/f0875490cea1497a9eca9c25f3f7774e/dev-master":"branch coverage","/codacy/grade/f0875490cea1497a9eca9c25f3f7774e":"code quality","/codacy/grade/f0875490cea1497a9eca9c25f3f7774e/dev-master":"branch code quality"},"routes":["/codacy/:type<coverage|grade>/:projectId/:branch?"]},{"id":"coveralls","title":"Coveralls","examples":{"/coveralls/c/github/jekyll/jekyll":"coverage (github)","/coveralls/c/github/jekyll/jekyll/master":"coverage (github, branch)","/coveralls/c/bitbucket/pyKLIP/pyklip":"coverage (bitbucket)","/coveralls/c/bitbucket/pyKLIP/pyklip/master":"coverage (bitbucket, branch)"},"routes":["/coveralls/c/:vcs<github|bitbucket>/:owner/:repo/:branch?"]},{"id":"codeclimate","title":"Code Climate","examples":{"/codeclimate/loc/codeclimate/codeclimate":"lines of code","/codeclimate/issues/codeclimate/codeclimate":"issues","/codeclimate/tech-debt/codeclimate/codeclimate":"technical debt","/codeclimate/maintainability/codeclimate/codeclimate":"maintainability","/codeclimate/maintainability-percentage/codeclimate/codeclimate":"maintainability (percentage)","/codeclimate/coverage/codeclimate/codeclimate":"coverage","/codeclimate/coverage-letter/codeclimate/codeclimate":"coverage (letter)"},"routes":["/codeclimate/:topic/:owner/:repo"]},{"id":"azure-pipelines","title":"Azure Piplines","examples":{"/azure-pipelines/yarnpkg/yarn/Yarn Acceptance Tests":"build","/azure-pipelines/yarnpkg/yarn/Yarn Acceptance Tests/azure-pipelines":"build (branch)"},"routes":["/azure-pipelines/:org/:project/:definition/:branch?"]},{"id":"lgtm","title":"LGTM","examples":{"/lgtm/langs/g/apache/cloudstack/java":"langs","/lgtm/alerts/g/apache/cloudstack":"alerts","/lgtm/lines/g/apache/cloudstack/java":"lines (java)","/lgtm/grade/g/apache/cloudstack/java":"grade (java)","/lgtm/grade/g/apache/cloudstack":"grade (auto)","/lgtm/grade/g/systemd/systemd":"grade (auto)"},"routes":["/lgtm/:topic<alerts|grade|lines|langs>/g/:owner/:name/:lang?","/lgtm/:topic<grade>/:lang/g/:owner/:name"]},{"id":"uptime-robot","title":"Uptime Robot","examples":{"/uptime-robot/status/m780862024-50db2c44c703e5c68d6b1ebb":"status","/uptime-robot/day/m780862024-50db2c44c703e5c68d6b1ebb":"(24 hours) uptime","/uptime-robot/week/m780862024-50db2c44c703e5c68d6b1ebb":"(past week) uptime","/uptime-robot/month/m780862024-50db2c44c703e5c68d6b1ebb":"(past month) uptime","/uptime-robot/response/m780862024-50db2c44c703e5c68d6b1ebb":"(last hour) response"},"routes":["/uptime-robot/:topic<status|day|week|month|response>/:apikey"],"help":"## Usage\n\n- `/uptime-robot/status/:api-key`   _status_\n- `/uptime-robot/day/:api-key`      _(24 hours) uptime_\n- `/uptime-robot/week/:api-key`     _(past week) uptime_\n- `/uptime-robot/month/:api-key`    _(past month) uptime_\n- `/uptime-robot/response/:api-key` _(last hours) response_\n\n## Creating the API key\n\nTo use an `/uptime-robot` badge, you have to create or find an API key specific to your monitor.\n\nFrom your UptimeRobot dashboard, go to\n[My Settings](https://uptimerobot.com/dashboard.php#mySettings) > API Settings > Monitor-Specific API Keys."},{"id":"xo","title":"XO","examples":{"/xo/status/badgen":"status","/xo/status/chalk":"status","/xo/indent/@tusbar/cache-control":"indent","/xo/semi/got":"semicolons"},"routes":["/xo/:topic<status|indent|semi>/:name","/xo/:topic<status|indent|semi>/:scope<@.+>/:name"]},{"id":"badgesize","title":"Badgesize","examples":{"/badgesize/normal/amio/emoji.json/master/emoji-compact.json":"normal size","/badgesize/brotli/amio/emoji.json/master/emoji-compact.json":"brotli size","/badgesize/gzip/amio/emoji.json/master/emoji-compact.json":"gzip size","/badgesize/normal/https://unpkg.com/snarkdown/dist/snarkdown.js":"arbitrary url"},"routes":["/badgesize/:topic/:path+"]},{"id":"jsdelivr","title":"jsDelivr","examples":{"/jsdelivr/hits/gh/jquery/jquery":"hits (per month)","/jsdelivr/hits/npm/lodash":"hits (per month)","/jsdelivr/rank/npm/lodash":"rank","/jsdelivr/v/npm/lodash":"version"},"routes":["/jsdelivr/:topic<hits|rank>/:platform/:pkg+","/jsdelivr/:topic<v>/npm/:pkg+"]},{"id":"dependabot","title":"Dependabot","examples":{"/dependabot/dependabot/dependabot-core/?icon=dependabot":"status"},"routes":["/dependabot/:owner/:repo/:identifier?"],"help":"\n## Private repositories\nIn order to use the dependabot badge with a private GitHub repository you will need to get its id. You can use the [GitHub API](https://developer.github.com/v3/) and [curl](https://curl.haxx.se/docs/manual.html) to do this like so:\n<pre>\ncurl -u \"<b>$your_username</b>\" https://api.github.com/repos/<b>$repo_owner</b>/<b>$repo_name</b>\n</pre>\n* _`$your_username` is well your GitHub username for authentication._\n* _`$repo_owner` is the owner of the repo e.g. badgen._\n* _`$repo_name` is the name of the repo e.g. badgen-icons._\n\nYou will need to have read permissions for the repo for this to work, and once entering the command you will be prompted to provide a password for your GitHub account. If you use 2 factor authentication use one of the following 2 methods:\n\n* Pass a 2 factor authentication code\n  <pre>\n  curl -u \"$your_username\" <b>--header 'x-github-otp: $2fa_code'</b> https://api.github.com/repos/$repo_owner/$repo_name\n  </pre>\n  * _`$2fa_code` is the 2 factor authentication code from your phone._\n\n* Pass a personal access token\n  <pre>\n  curl <b>--header 'Authorization: token $pat_token'</b> https://api.github.com/repos/$repo_owner/$repo_name\n  </pre>\n  * _`$pat_token` is a personal authentication token (see [this article](https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line))._\n\nRunning one of the above curl commands should output a large JSON object of all the repository details, all we want is the \"id\" field, it should be the first item and be a 9 digit number.\n\nOnce you have found the id for your repo, you can use it with the badgen dependabot endpoint like so:\n<pre>\nhttps://badgen.net/dependabot/badgen/example-private-repo/<b>123456789</b>?icon=dependabot\n</pre>\n"},{"id":"opencollective","title":"Open Collective","examples":{"/opencollective/backers/webpack":"backers","/opencollective/contributors/webpack":"contributors","/opencollective/balance/webpack":"balance","/opencollective/yearly/webpack":"yearly income"},"routes":["/opencollective/:topic<backers|contributors|balance|yearly>/:slug"]},{"id":"keybase","title":"Keybase","examples":{"/keybase/pgp/lukechilds":"pgp key"},"routes":["/keybase/:topic<pgp>/:username"]},{"id":"twitter","title":"Twitter","examples":{"/twitter/follow/rustlang":"followers count","/twitter/follow/golang":"followers count"},"routes":["/twitter/:topic<follow>/:user"]},{"id":"runkit","title":"With RunKit Endpoint","examples":{"/runkit/satisfaction-flq08o9mm3ka/102909/topic":"satisfaction (topic)","/runkit/satisfaction-flq08o9mm3ka/102909/people":"satisfaction (people)","/runkit/satisfaction-flq08o9mm3ka/102909/employee":"satisfaction (employ)"},"routes":["/runkit/:endpoint-id/:path*"],"help":"\n    https://badgen.net/runkit/cal-badge-icd0onfvrxx6/Asia/Shanghai\n                              ──┬─────────────────── ──┬──────────\n                                └─ endpoint-id         └─ path-args (optional)\n\n\n## RunKit Endpoint\n\nhttps://runkit.com/home#endpoint\n\nIf you are not familiar with RunKit endpoint, [this guide](https://runkit.com/docs/endpoint) would help.\n\n## Use Badgen with RunKit Endpoint\n\n1. Create a RunKit notebook (e.g. https://runkit.com/amio/cal-badge), which gives you an endpoint:\n\n    ```\n    https://cal-badge-icd0onfvrxx6.runkit.sh\n    ```\n\n  it returns a JSON like:\n\n    ```\n    {\n      \"subject\": \"2019\",\n      \"status\": \"6-1\",\n      \"color\": \"blue\"\n    }\n    ```\n\n2. Click <kbd>endpoint</kbd> on notebook page for the endpoint address, then you have `endpoint-id` from it's subdomain:\n\n    ```\n    cal-badge-icd0onfvrxx6\n    ```\n\n3. Use `endpoint-id` within badgen url:\n\n    ```\n    https://badgen.net/runkit/cal-badge-icd0onfvrxx6\n    ```\n\n  That's it:\n\n  ![](https://badgen.net/runkit/cal-badge-icd0onfvrxx6)\n\nFurthermore, you can append arbitrary path args (e.g. `/Asia/Shanghai`) to the end of badgen url, Badgen will request RunKit endpoint with that. This badge:\n\n```\nhttps://badgen.net/runkit/cal-badge-icd0onfvrxx6/Asia/Shanghai\n```\n\nrepresents data from:\n\n```\nhttps://cal-badge-icd0onfvrxx6.runkit.sh/Asia/Shanghai\n```\n"},{"id":"https","title":"With HTTPS Endpoint","examples":{"/https/cal-badge-icd0onfvrxx6.runkit.sh":"https endpoint","/https/cal-badge-icd0onfvrxx6.runkit.sh/Asia/Shanghai":"https endpoint (with path args)"},"routes":["/https/:hostname/:path*"],"help":"\n## Use Badgen with HTTPS Endpoint\n\n1. Create a https endpoint with [RunKit][runkit-href] / [Now][now-href]\nor any platform, which returns a JSON in this format:\n\n   ```\n   {\n       subject: 'hello',\n       status: 'world',\n       color: 'blue'\n   }\n   ```\n\n2. Assume the endpoint can be reached as:\n\n   ```\n   https://some-endpoint.example.com/what/ever/args\n   ```\n\n   then then the corresponding badge url on Badgen is:\n\n   ```\n   /https/some-endpoint.example.com/what/ever/args\n   ```\n\nTake this endpoint & badgen url for example:\n\n- https://cal-badge-icd0onfvrxx6.runkit.sh\n- https://badgen.net/https/cal-badge-icd0onfvrxx6.runkit.sh\n\nFurthermore, you may append path args to it:\n\n- https://cal-badge-icd0onfvrxx6.runkit.sh/Asia/Shanghai\n- https://badgen.net/https/cal-badge-icd0onfvrxx6.runkit.sh/Asia/Shanghai\n\n[runkit-href]: https://runkit.com/home#endpoint\n[now-href]: https://zeit.co/now\n\n<style>\n  li a { font-family: monospace; font-size: 0.9em }\n</style>\n"}],"static":[{"title":"General","examples":{"/badge/Swift/4.2/orange":"swift version","/badge/license/MIT/blue":"license MIT","/badge/chat/on%20gitter/cyan":"chat on gitter","/badge/stars/★★★★☆":"star rating","/badge/become/a%20patron/F96854":"patron","/badge/code%20style/standard/f2a":"code style: standard"}},{"title":"Options","examples":{"/badge/icon/github?icon=github":"use builtin icon","/badge/github/github?icon":"use builtin icon (by subject)","/badge/jQuery/powered?icon=https://simpleicons.now.sh/jquery/fff":"use external icon","/badge/icon/github?label=custom label":"custom label","/badge/icon/github?label":"disable label","/badge/github/github?icon&label":"use icon, disable label","/badge/platform/ios,macos,tvos?list=|":"list (custom seprator)"}}]}
